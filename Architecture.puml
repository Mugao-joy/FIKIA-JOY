@startuml Fikia

'Users
actor "Students" as students
actor "University Admins" as admins
actor "Company Recruiters" as recruiters

'Frontend
package "Frontend (React.js)" {
  interface "Student Interface" as studentUI
  interface "University Admin Interface" as adminUI
  interface "Recruiter Interface" as recruiterUI
}

'Load Balancer
component "Load Balancer (NGINX or AWS ELB)" as loadBalancer

'Backend
package "Backend (Django)" {
  component "Authentication Service" as authService
  component "User Service" as userService
  component "Search Service" as searchService
  component "Event Service" as eventService
  component "Job Service" as jobService
}

'Databases
database "PostgreSQL" as postgresql
database "Elasticsearch" as elasticsearch

'Auth0
component "Auth0" as auth0

'Caching Layer
component "Redis" as redis

'Storage
component "AWS S3" as awsS3

'Users to Frontend
students --> studentUI : "Use"
admins --> adminUI : "Use"
recruiters --> recruiterUI : "Use"

'Frontend to Load Balancer
studentUI --> loadBalancer
adminUI --> loadBalancer
recruiterUI --> loadBalancer

'Load Balancer to Backend
loadBalancer --> authService
loadBalancer --> userService
loadBalancer --> searchService
loadBalancer --> eventService
loadBalancer --> jobService

'Backend to Databases and Services
authService --> postgresql : "Store/Retrieve Data"
userService --> postgresql : "Store/Retrieve Data"
searchService --> elasticsearch : "Query Index"
eventService --> postgresql : "Store/Retrieve Data"
jobService --> postgresql : "Store/Retrieve Data"

'Backend to Auth0
authService --> auth0 : "Token Validation"

'Backend to Redis
userService --> redis : "Cache Access"
searchService --> redis : "Cache Access"
eventService --> redis : "Cache Access"
jobService --> redis : "Cache Access"

'Backend to AWS S3
jobService --> awsS3 : "Store/Retrieve Files"

@enduml
